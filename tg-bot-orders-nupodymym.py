import telebot
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telebot import types

mytoken = "6503212060:AAHo2eMVlpM9HVjqsZUIfwk2iH--5kjPOQ4"
bot = telebot.TeleBot(mytoken)
answers = ['–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞–∑–∞—Ç—å.', '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.', '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.', '–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏... >_<']

myscope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
mycreds = ServiceAccountCredentials.from_json_keyfile_name('telegram-nupodymym-bot-90c25fc59a25.json',myscope)
myclient = gspread.authorize(mycreds)
mysheet = myclient.open("–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è UnderTK –ù–æ—è–±—Ä—å").get_worksheet_by_id(1653485875)


global sheet_values
global bascet
global polucheniye
global vremya
global money
global total
global user_vars


# // —Å–¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞

user_vars = {}
bascet = []
money = []
sheet_values = mysheet.get_values('T4:U')



@bot.message_handler(commands=['start'])
def welcome(message):
    # –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ /start
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    assortiment_btn = types.KeyboardButton('üõç –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
    manager_btn = types.KeyboardButton('üë® –ú–µ–Ω–µ–¥–∂–µ—Ä')
    
    markup.row(assortiment_btn, manager_btn)
    if message.text == '/start':
        bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüëã–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name} {message.from_user.last_name}\nüõç–£ –º–µ–Ω—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüëã–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name} {message.from_user.last_name}\nüõç–£ –º–µ–Ω—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', reply_markup=markup)

    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['money'] = []
    user_vars[user_id]['bascet'] = []
    user_vars[user_id]['vremya'] = []
    user_vars[user_id]['bascet_true'] = []
    user_vars[user_id]['adress'] = []
    user_vars[user_id]['time_time'] = []
    user_vars[user_id]['telephon_number'] = []
    user_vars[user_id]['bascet_true_dostavka'] = []
    user_vars[user_id]['time_yandex'] = []
    user_vars[user_id]['adress_pochta'] = []
    user_vars[user_id]['fio'] = []
    user_vars[user_id]['code_pochta'] = []
    user_vars[user_id]['telephon_number_pochta'] = []
    user_vars[user_id]['bascet_true_pochta'] = []

    

    




    


@bot.message_handler()
def handler(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    if message.text == 'üõç –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑':
        assortiment(message)
    if message.text == 'üë® –ú–µ–Ω–µ–¥–∂–µ—Ä':
        manager(message)


    if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        assortiment(message)
    if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥‚†Ä':
        welcome(message)
    if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥':
        assortiment(message)
    if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥‚†Ä':
        assortiment(message)
    if message.text == '‚Ü©Ô∏è –ö –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–µ':
        yandex_dostavka(message)
    if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –æ–ø–ª–∞—Ç–µ':
        yandex_order_pay(message)
    if message.text == '‚Ü©Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä':
        assortiment(message)
    if message.text == '‚Ü©Ô∏è –ö –≤—Ä–µ–º–µ–Ω–∏':
        samovyvoz(message)
    if message.text == '‚Ü©Ô∏è –ö –¥–æ—Å—Ç–∞–≤–∫–µ':
        dostavka(message)
    if message.text == '‚Ü©Ô∏è –ö –ø–æ—á—Ç–µ':
        pochta(message)


    if message.text == 'üí® –ö–∞—Ç–∞–ª–æ–≥ 1/3':
        assortiment_1(message)
    if message.text == 'üí® –ö–∞—Ç–∞–ª–æ–≥ 2/3':
        assortiment_2(message)
    if message.text == 'üí® –ö–∞—Ç–∞–ª–æ–≥ 3/3':
        assortiment_3(message)
    if message.text == 'üõç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–∫–∞–∑':
        proverka_zakaz(message)
    
    if message.text == 'üõç –î–∞–ª—å—à–µ':
        vibor_polucheniya(message)
    
    if message.text == '‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É':
        clear_bascet(message)
    if message.text == '‚ùå –°—Ç–µ—Ä–µ—Ç—å':
        clear_vremya(message)
    if message.text == '‚ùå –°—Ç–µ—Ä–µ—Ç—å‚†Ä':
        clear_dostavka(message)
    if message.text == '‚ùå –°—Ç–µ—Ä–µ—Ç—å‚†Ä‚†Ä':
        time_call_yandex_clean(message)
    if message.text == '‚ùå –°—Ç–µ—Ä–µ—Ç—å‚†Ä‚†Ä‚†Ä':
        clear_pochta(message)



    if message.text == 'üì¶ –°–∞–º–æ–≤—ã–≤–æ–∑':
        samovyvoz(message)
    if message.text == 'üöå –î–æ—Å—Ç–∞–≤–∫–∞':
        dostavka(message)
    if message.text == 'üöï –Ø–Ω–¥–µ–∫—Å –¥–æ—Å—Ç–∞–≤–∫–∞':
        yandex_dostavka(message)
    if message.text == 'üì© –ü–æ—á—Ç–∞':
        pochta(message)


    if message.text == 'üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å':
        itogo(message)
    if message.text == 'üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚†Ä':
        itogo_dostavka(message)
    if message.text == 'üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚†Ä‚†Ä':
        itogo_pochta(message)

    if message.text == 'üõç –û–ø–ª–∞—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É':
        yandex_order_pay(message)
    if message.text == 'üõç –í—ã–∑–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫—É':
        yandex_order_call(message)

    if message.text == 'üõç –ó–∞–∫–∞–∑–∞—Ç—å':
        order_send(message)
        next(message)
    if message.text == 'üõç –ó–∞–∫–∞–∑–∞—Ç—å‚†Ä':
        order_send_dostavka(message)
        next(message)      
    if message.text == 'üõç –ó–∞–∫–∞–∑–∞—Ç—å‚†Ä‚†Ä':
        order_send_pochta(message)
        next(message)
    if message.text == 'üõç –ì–æ—Ç–æ–≤–æ':
        next(message)  

    if message.text == 'üõç –ù–æ–≤—ã–π –∑–∞–∫–∞–∑':
        end(message)
    


    if message.text == 'üï∫':
        dance_emoji(message)
    if message.text == 'üíÉ':
        dance_emoji(message)
    if message.text == 'üê∫':
        wolf_emoji(message)
    if message.text == 'üê∫ü§™':
        crazy_wolf_emoji(message)
    if message.text == 'üò°':
        rage_emoji(message)
    if message.text == 'üñ§':
        love_emoji(message)
    if message.text == 'üí∞üïé':
        secret_jew_emoji(message)
        
       

    for zhizha in sheet_values:
        if str(zhizha).strip("[]").strip("''").replace("', '", " üí∞")+" —Ä—É–±" == message.text:
            user_vars[user_id]['money'].append(int(zhizha[1]))
            user_vars[user_id]['bascet'].append(str(zhizha).strip("[]").strip("''").replace("', '", " üí∞")+" —Ä—É–±")


def assortiment(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    assortiment_1_btn = types.KeyboardButton('üí® –ö–∞—Ç–∞–ª–æ–≥ 1/3')
    assortiment_2_btn = types.KeyboardButton('üí® –ö–∞—Ç–∞–ª–æ–≥ 2/3')
    assortiment_3_btn = types.KeyboardButton('üí® –ö–∞—Ç–∞–ª–æ–≥ 3/3')
    proverka_zakaz = types.KeyboardButton('üõç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–∫–∞–∑')
    markup.row(proverka_zakaz)
    markup.row(assortiment_1_btn, assortiment_2_btn, assortiment_3_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüí®–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ —Å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º:', reply_markup=markup)



def assortiment_1(message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ Google-—Ç–∞–±–ª–∏—Ü—ã
    sheet_values = mysheet.get_values('T4:U')
    global sheet_length
    if len(sheet_values) > 100:
        sheet_length = 104
    else:
        sheet_length = len(sheet_values)
    MainDataArray = []
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    
    i = -1
    for array_T in mysheet.get_values('T4'+':'+'U'+str(sheet_length)):
        MainDataArray.append(array_T)
        i+=1
        sklad_1_btn = types.KeyboardButton(str(MainDataArray[i]).strip("[]").strip("''").replace("', '", " üí∞")+" —Ä—É–±")
        keyboard.add(sklad_1_btn)

    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüëá–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', reply_markup=keyboard)



def assortiment_2(message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ Google-—Ç–∞–±–ª–∏—Ü—ã
    sheet_length = 104
    sheet_values2 = mysheet.get_values('T'+str(sheet_length)+':'+'U')  
    global sheet_length2
    if len(sheet_values2) > 100:
        sheet_length2 = 204
    else:
        sheet_length2 = len(sheet_values2)+104
    MainDataArray = []
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    
    i = -1
    for array_T in mysheet.get_values('T104'+':'+'U'+str(sheet_length2)):
        MainDataArray.append(array_T)
        i+=1
        sklad_1_btn = types.KeyboardButton(str(MainDataArray[i]).strip("[]").strip("''").replace("', '", " üí∞")+" —Ä—É–±")
        keyboard.add(sklad_1_btn)

    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüëá–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', reply_markup=keyboard)


def assortiment_3(message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ Google-—Ç–∞–±–ª–∏—Ü—ã
    sheet_length = 204
    sheet_values3 = mysheet.get_values('T'+str(sheet_length)+':'+'U')  
    global sheet_length3
    if len(sheet_values3) > 100:
        sheet_length3 = 304
    else:
        sheet_length3 = len(sheet_values3)+204
    MainDataArray = []
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    
    i = -1
    for array_T in mysheet.get_values('T204'+':'+'U'+str(sheet_length3)):
        MainDataArray.append(array_T)
        i+=1
        sklad_1_btn = types.KeyboardButton(str(MainDataArray[i]).strip("[]").strip("''").replace("', '", " üí∞")+" —Ä—É–±")
        keyboard.add(sklad_1_btn)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    keyboard.add(back_btn)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüëá–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', reply_markup=keyboard)







def proverka_zakaz(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    finish_buy = types.KeyboardButton('üõç –î–∞–ª—å—à–µ')
    clear_bascet = types.KeyboardButton('‚ùå –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É')
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥')
    markup.row(back_btn, finish_buy)
    markup.row(clear_bascet)
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    user_vars[user_id]['bascet_true'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true'] = user_vars[user_id]['bascet_true'].strip("[]").strip("''").replace("', '", " üí∞")
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true"]}')
    bot.send_message(message.chat.id, f'üí∞ –°—É–º–º–∞: {total}—Ä—É–±', reply_markup=markup)
    bot.send_message(message.chat.id, '‚ùóÔ∏è–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä–∑–∏–Ω—É –∏ –∂–º–∏—Ç–µ \n¬´üõç –î–∞–ª—å—à–µ¬ª', reply_markup=markup)
def clear_bascet(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥')
    markup.row(back_btn)
    user_vars[user_id]['bascet'].clear()
    total = 0
    user_vars[user_id]['money'].clear()
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùå–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞')
    user_vars[user_id]['bascet_true'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true'] = user_vars[user_id]['bascet_true'].strip("[]").strip("''").replace("', '", " üí∞")
    bot.send_message(message.chat.id, f'üõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true"]}', reply_markup=markup)








def vibor_polucheniya(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    samovyvoz = types.KeyboardButton('üì¶ –°–∞–º–æ–≤—ã–≤–æ–∑')
    dostavka = types.KeyboardButton('üöå –î–æ—Å—Ç–∞–≤–∫–∞')
    yandex_dostavka = types.KeyboardButton('üöï –Ø–Ω–¥–µ–∫—Å –¥–æ—Å—Ç–∞–≤–∫–∞')
    pochta = types.KeyboardButton('üì© –ü–æ—á—Ç–∞')
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥‚†Ä')
    markup.row(samovyvoz, dostavka, yandex_dostavka, pochta)
    markup.row(back_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è:', reply_markup=markup)








def samovyvoz(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüí¨–°–∞–º–æ–≤—ã–≤–æ–∑ –Ω–∞ –°–≤–∏—Ä–∏–¥–æ–≤–∞ 69 \n\nüí¨–° 11 –¥–æ 24')
    answer = bot.send_message(message.chat.id, '‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–¥—ä–µ–¥–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å: \n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´15:20¬ª', reply_markup=markup)
    bot.register_next_step_handler(answer, vremya)
def vremya(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['vremya'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    next = types.KeyboardButton('üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å')
    clear_vremya = types.KeyboardButton('‚ùå –°—Ç–µ—Ä–µ—Ç—å')
    markup.row(clear_vremya, next)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚è≥–í—Ä–µ–º—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞: {user_vars[user_id]["vremya"]}', reply_markup=markup)
def clear_vremya(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['vremya'] = ""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_time_btn = types.KeyboardButton('‚Ü©Ô∏è –ö –≤—Ä–µ–º–µ–Ω–∏')
    markup.row(back_time_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùå–í—Ä–µ–º—è —Å—Ç—ë—Ä—Ç–æ', reply_markup=markup)



def itogo(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
    next = types.KeyboardButton('üõç –ó–∞–∫–∞–∑–∞—Ç—å')
    markup.row(back_btn, next)
    user_vars[user_id]['bascet_true'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true'] = user_vars[user_id]['bascet_true'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true"]}')
    bot.send_message(message.chat.id, f'‚è≥ –í—Ä–µ–º—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞: {user_vars[user_id]["vremya"]}')
    bot.send_message(message.chat.id, f'üí∞ –°—É–º–º–∞: {total}—Ä—É–±', reply_markup=markup)
def order_send(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['user_first_name'] = message.from_user.first_name
    user_vars[user_id]['user_last_name'] = message.from_user.last_name
    user_vars[user_id]['user_username'] = message.from_user.username
    message.chat.id1 = 5482862125
    user_vars[user_id]['bascet_true'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true'] = user_vars[user_id]['bascet_true'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id1, f'–ó–∞–∫–∞–∑ –æ—Ç {user_vars[user_id]["user_first_name"]} {user_vars[user_id]["user_last_name"]}({user_vars[user_id]["user_username"]})\n\nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true"]} \n\n‚è≥ –í—Ä–µ–º—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞: {user_vars[user_id]["vremya"]}\n\nüí∞ –°—É–º–º–∞: {total}—Ä—É–±')









def dostavka(message): 
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüí¨–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ 4—Ä \n\nüí¨–î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–∞–π–æ–Ω–µ –≥–æ—Ä–æ–¥–∞ - –ì–æ–º–µ–ª—å \n\nüí¨–ï—Å–ª–∏ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è(–±–µ–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞), —Ç–æ –≤–æ–∑–º–æ–∂–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ 30 –º–∏–Ω –ø–æ–∑–∂–µ/—Ä–∞–Ω—å—à–µ')
    adres_msg = bot.send_message(message.chat.id, '‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å: \n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´—É–ª. –°–≤–∏—Ä–∏–¥–æ–≤–∞ 21¬ª',reply_markup=markup)

    bot.register_next_step_handler(adres_msg, adress)

def adress(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['adress'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    time_msg = bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞–≤–∏—Ç—å:', reply_markup=markup)
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´14:00 - 15:00¬ª')
    bot.register_next_step_handler(time_msg, time_time)
def time_time(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['time_time'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    telephone_number_msg = bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä:', reply_markup=markup)
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´+375299617485¬ª')
    bot.register_next_step_handler(telephone_number_msg, telephon_number)
def telephon_number(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['telephon_number'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    next = types.KeyboardButton('üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚†Ä')
    clear_dostavka = types.KeyboardButton('‚ùå –°—Ç–µ—Ä–µ—Ç—å‚†Ä')
    markup.row(clear_dostavka, next)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüó∫–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["adress"]}')
    bot.send_message(message.chat.id, f'\n‚è≥–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["time_time"]}')
    bot.send_message(message.chat.id, f'\nüìû–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user_vars[user_id]["telephon_number"]}', reply_markup=markup)
def clear_dostavka(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['adress'] = ""
    user_vars[user_id]['time_time'] = ""
    user_vars[user_id]['telephon_number'] = ""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_adress_btn = types.KeyboardButton('‚Ü©Ô∏è –ö –¥–æ—Å—Ç–∞–≤–∫–µ')
    markup.row(back_adress_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùå–ê–¥—Ä–µ—Å —Å—Ç—ë—Ä—Ç \n\n‚ùå–í—Ä–µ–º—è —Å—Ç—ë—Ä—Ç–æ \n\n‚ùå–ù–æ–º–µ—Ä —Å—Ç—ë—Ä—Ç',  reply_markup=markup)



def itogo_dostavka(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
    next = types.KeyboardButton('üõç –ó–∞–∫–∞–∑–∞—Ç—å‚†Ä')
    markup.row(back_btn, next)
    user_vars[user_id]['bascet_true_dostavka'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true_dostavka'] = user_vars[user_id]['bascet_true_dostavka'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true_dostavka"]} \n‚†Ä \nüó∫ –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["adress"]} \n‚è≥ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["time_time"]} \nüìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user_vars[user_id]["telephon_number"]} \n‚†Ä \n üí∞ –°—É–º–º–∞: {total}—Ä—É–± + 4—Ä—É–±', reply_markup=markup)
def order_send_dostavka(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['user_first_name'] = message.from_user.first_name
    user_vars[user_id]['user_last_name'] = message.from_user.last_name
    user_vars[user_id]['user_username'] = message.from_user.username
    message.chat.id1 = 5482862125
    user_vars[user_id]['bascet_true_dostavka'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true_dostavka'] = user_vars[user_id]['bascet_true_dostavka'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id1, f'–ó–∞–∫–∞–∑ –æ—Ç {user_vars[user_id]["user_first_name"]} {user_vars[user_id]["user_last_name"]}({user_vars[user_id]["user_username"]})\n\nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true_dostavka"]} \n\nüó∫ –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["adress"]} \n‚è≥ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["time_time"]} \nüìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user_vars[user_id]["telephon_number"]} \n\nüí∞ –°—É–º–º–∞: {total}—Ä—É–± + 4—Ä—É–±')








def yandex_dostavka(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüí¨–û—Ç–ø—Ä–∞–≤–∫–∞ –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–æ–π —Å 12 –ø–æ 24 \n\nüí¨–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Ä–∞–Ω—å—à–µ/–ø–æ–∑–∂–µ, —Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞', reply_markup=markup)
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç–µ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫—É –Ω–∞ –∞–¥—Ä–µ—Å:')
    call_yandex = bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´14:20¬ª')
    bot.register_next_step_handler(call_yandex, time_call_yandex)
def time_call_yandex(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['time_yandex'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bascet_pay = types.KeyboardButton('üõç –û–ø–ª–∞—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É')
    yandex_time_clear = types.KeyboardButton('‚ùå –°—Ç–µ—Ä–µ—Ç—å‚†Ä‚†Ä')
    markup.row(yandex_time_clear, bascet_pay)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚è≥ –í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞ –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ –∞–¥—Ä–µ—Å: {user_vars[user_id]["time_yandex"]}', reply_markup=markup)
def time_call_yandex_clean(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['time_yandex'] = ""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_yandex_btn = types.KeyboardButton('‚Ü©Ô∏è –ö –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–µ')
    markup.row(back_yandex_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùå–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞ –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–∏ —Å—Ç—ë—Ä—Ç–æ',  reply_markup=markup)
def yandex_order_pay(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yandex_call_btn = types.KeyboardButton('üõç –í—ã–∑–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫—É')
    back_time_call_yandex_btn = types.KeyboardButton('‚Ü©Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
    markup.row(back_time_call_yandex_btn, yandex_call_btn)
    user_vars[user_id]['bascet_true_dostavka'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true_dostavka'] = user_vars[user_id]['bascet_true_dostavka'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true_dostavka"]} \n‚†Ä \nüí∞ –°—É–º–º–∞: {total}—Ä—É–±')
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–û–ø–ª–∞—Ç–∏—Ç–µ –∫–æ—Ä–∑–∏–Ω—É –∏ –∂–º–∏—Ç–µ ¬´üõç –í—ã–∑–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫—É¬ª \n\nüí≥–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 4916 9896 9587 5962 \nüìÜ–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 10/27 \nüë®–ò–º—è/–§–∞–º–∏–ª–∏—è: YAUHENIY LN', reply_markup=markup)
def yandex_order_call(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_order_pay_yandex_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –æ–ø–ª–∞—Ç–µ')
    new_order_btn = types.KeyboardButton('üõç –ì–æ—Ç–æ–≤–æ')
    markup.row(back_order_pay_yandex_btn, new_order_btn)

    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–í—ã–∑–æ–≤–∏—Ç–µ –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫—É(–∫–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∏—Ç –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ —Ä–∞–Ω–µ–µ)–ø–æ –¥–∞–Ω–Ω—ã–º –Ω–∏–∂–µ:')
    bot.send_message(message.chat.id, '\nüó∫–ê–¥—Ä–µ—Å: –°–≤–∏—Ä–∏–¥–æ–≤–∞ 69 \nüè†–ü–æ–¥—ä–µ–∑–¥: 1 \nüìû–ù–æ–º–µ—Ä: +375259167481', reply_markup=markup)

    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['user_first_name'] = message.from_user.first_name
    user_vars[user_id]['user_last_name'] = message.from_user.last_name
    user_vars[user_id]['user_username'] = message.from_user.username
    message.chat.id1 = 5482862125
    user_vars[user_id]['bascet_true_dostavka'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true_dostavka'] = user_vars[user_id]['bascet_true_dostavka'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id1, f'–ó–∞–∫–∞–∑ –æ—Ç {user_vars[user_id]["user_first_name"]} {user_vars[user_id]["user_last_name"]}({user_vars[user_id]["user_username"]})\n\nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true_dostavka"]} \n\n‚è≥ –í—Ä–µ–º—è –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–∏: {user_vars[user_id]["time_yandex"]} \n\nüí∞ –°—É–º–º–∞: {total}—Ä—É–±')
    










def pochta(message): 
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüí¨–û—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–ª–ø–æ—á—Ç–æ–π \n\nüí¨–ü–æ—á—Ç–æ–≤—ã–µ —Å–±–æ—Ä—ã 5—Ä \n\nüí¨–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ \n\nüí¨–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–º(–æ–ø–ª–∞—Ç–∞ –∑–∞ —Ç–æ–≤–∞—Ä –∏ –¥–æ—Å—Ç–∞–≤–∫—É –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏)')
    adres_msg = bot.send_message(message.chat.id, '‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å: \n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´–ú–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω, –∞–≥.–û—Å–∏–ø–æ–≤–∏—á–∏, —É–ª.–ú–æ—Å–∫–æ–≤—Å–∫–∞—è 3, –∫–≤.2¬ª',reply_markup=markup)
    bot.register_next_step_handler(adres_msg, adress_pochta)

def adress_pochta(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['adress_pochta'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    adress_pochta_msg = bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –§–ò–û:', reply_markup=markup)
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´–ö—É–∑–Ω–µ—Ü–æ–≤ –í–∞—Å–∏–ª–∏–π –ò–≤–∞–Ω–æ–≤–∏—á¬ª')
    bot.register_next_step_handler(adress_pochta_msg, FIO)
def FIO(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['fio'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    fio_msg = bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ—á—Ç–æ–≤—ã–π –∫–æ–¥:', reply_markup=markup)
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´247654¬ª')
    bot.register_next_step_handler(fio_msg, code_pochta)
def code_pochta(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['code_pochta'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    space = types.KeyboardButton('‚†Ä')
    markup.row(space)
    code_pochta_msg = bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùóÔ∏è–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä:', reply_markup=markup)
    bot.send_message(message.chat.id, '\n‚ùóÔ∏è–ü—Ä–∏–º–µ—Ä: ¬´+375259167485¬ª')
    bot.register_next_step_handler(code_pochta_msg, telephon_number_pochta)
def telephon_number_pochta(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['telephon_number_pochta'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    next = types.KeyboardButton('üõç –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å‚†Ä‚†Ä')
    clear_dostavka = types.KeyboardButton('‚ùå –°—Ç–µ—Ä–µ—Ç—å‚†Ä‚†Ä‚†Ä')
    markup.row(clear_dostavka, next)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüó∫–ê–¥—Ä–µ—Å: {user_vars[user_id]["adress_pochta"]}')
    bot.send_message(message.chat.id, f'\nüë®‚Äçü¶∞–§–ò–û: {user_vars[user_id]["fio"]}')
    bot.send_message(message.chat.id, f'\nüè£–ü–æ—á—Ç–æ–≤—ã–π –∫–æ–¥: {user_vars[user_id]["code_pochta"]}')
    bot.send_message(message.chat.id, f'\nüìû–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user_vars[user_id]["telephon_number_pochta"]}', reply_markup=markup)
def clear_pochta(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['adress_pochta'] = ""
    user_vars[user_id]['fio'] = ""
    user_vars[user_id]['code_pochta'] = ""
    user_vars[user_id]['telephon_number_pochta'] = ""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_tel_numb_btn = types.KeyboardButton('‚Ü©Ô∏è –ö –ø–æ—á—Ç–µ')
    markup.row(back_tel_numb_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚ùå–ê–¥—Ä–µ—Å —Å—Ç—ë—Ä—Ç \n\n‚ùå–§–ò–û —Å—Ç—ë—Ä—Ç–æ \n\n‚ùå–ö–æ–¥ —Å—Ç—ë—Ä—Ç \n\n‚ùå–¢–µ–ª–µ—Ñ–æ–Ω —Å—Ç—ë—Ä—Ç',  reply_markup=markup)



def itogo_pochta(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
    next = types.KeyboardButton('üõç –ó–∞–∫–∞–∑–∞—Ç—å‚†Ä‚†Ä')
    markup.row(back_btn, next)
    user_vars[user_id]['bascet_true_pochta'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true_pochta'] = user_vars[user_id]['bascet_true_pochta'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id, f'\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true_pochta"]} \n‚†Ä \nüó∫ –ê–¥—Ä–µ—Å: {user_vars[user_id]["adress_pochta"]} \nüë®‚Äçü¶∞ –§–ò–û: {user_vars[user_id]["fio"]} \nüè£ –ü–æ—á—Ç–æ–≤—ã–π –∫–æ–¥: {user_vars[user_id]["code_pochta"]} \nüìû–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user_vars[user_id]["telephon_number_pochta"]} \n‚†Ä \nüí∞ –°—É–º–º–∞: {total}—Ä—É–± + 5—Ä—É–±', reply_markup=markup)
def order_send_pochta(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    user_vars[user_id]['user_first_name'] = message.from_user.first_name
    user_vars[user_id]['user_last_name'] = message.from_user.last_name
    user_vars[user_id]['user_username'] = message.from_user.username
    message.chat.id1 = 5482862125
    user_vars[user_id]['bascet_true_pochta'] = ",\n".join(user_vars[user_id]['bascet'])
    user_vars[user_id]['bascet_true_pochta'] = user_vars[user_id]['bascet_true_pochta'].strip("[]").strip("''").replace("', '", " üí∞")
    total = 0
    for element in user_vars[user_id]['money']:
        if isinstance(element, int):
            total = int(total) + int(element)
    bot.send_message(message.chat.id1, f'–ó–∞–∫–∞–∑ –æ—Ç {user_vars[user_id]["user_first_name"]} {user_vars[user_id]["user_last_name"]}({user_vars[user_id]["user_username"]})\n\nüõí –í –∫–æ—Ä–∑–∏–Ω–µ: \n{user_vars[user_id]["bascet_true_pochta"]} \n\nüó∫ –ê–¥—Ä–µ—Å: {user_vars[user_id]["adress_pochta"]} \nüë®‚Äçü¶∞ –§–ò–û: {user_vars[user_id]["fio"]} \nüè£ –ü–æ—á—Ç–æ–≤—ã–π –∫–æ–¥: {user_vars[user_id]["code_pochta"]} \nüìû–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {user_vars[user_id]["telephon_number_pochta"]} \n\nüí∞ –°—É–º–º–∞: {total}—Ä—É–± + 5—Ä—É–±')







def next(message):
    user_id = message.from_user.id
    if user_id not in user_vars:
        user_vars[user_id] = {}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ty_btn = types.KeyboardButton('üõç –ù–æ–≤—ã–π –∑–∞–∫–∞–∑')
    markup.row(ty_btn)
    bot.send_message(message.chat.id, "\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω ‚úÖ\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏ ü•∞", reply_markup=markup)
    user_vars[user_id]['bascet'].clear()


def end(message):
    welcome(message)



def manager(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_btn = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥‚†Ä')
    markup.row(back_btn)
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \nüë®–ï–≤–≥–µ–Ω–∏–π –ú–µ–Ω–µ–¥–∂–µ—Ä ¬´–ù—É, –ø–æ–¥—ã–º–∏–º!¬ª @nupodymym1', reply_markup=markup)




def dance_emoji(message):
    bot.send_message(message.chat.id, '·ïï( ·êõ )·ïó')
def rage_emoji(message):
    bot.send_message(message.chat.id, '‚ïØ‚Å†¬∞‚Å†‚ñ°‚Å†¬∞‚Å†Ôºâ‚Å†‚ïØ‚Å†Ô∏µ‚Å†¬†‚Å†‚îª‚Å†‚îÅ‚Å†‚îª')
def love_emoji(message):
    bot.send_message(message.chat.id, '(‚Å†‚óç‚Å†‚Ä¢‚Å†·¥ó‚Å†‚Ä¢‚Å†‚óç‚Å†)‚Å†‚ù§')    
def wolf_emoji(message):
    bot.send_message(message.chat.id, '‡∏Ö^‚Ä¢Ôªå‚Ä¢^‡∏Ö')
def crazy_wolf_emoji(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEKpOBlQFzmGc8OPn8AAWsd5bAzCjMjNXcAAgEnAAKnUjlIQORkrOtnAZozBA')
def secret_jew_emoji(message):
    bot.send_message(message.chat.id, '‚†Ä‚†Ä‚†Ä‚îè‚îÅ‚îì')
    bot.send_message(message.chat.id, '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ')
    bot.send_message(message.chat.id, '‚†ÄÔæêŒòc_Œò-Ôæê')




@bot.message_handler(content_types='photo')
def get_photo(message):
    bot.send_message(message.chat.id, '\n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n‚†Ä \n–Ø –±–æ—Ç - —É –º–µ–Ω—è –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ :( –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É')


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
while True:
    try: bot.polling(none_stop=True)
    except Exception as ex: print (ex)